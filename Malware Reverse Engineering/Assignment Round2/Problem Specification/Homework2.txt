1. Debuggers, Windows, emulation (3 points)
-------------------------------------------

Are the following claims true or false? Justify your answers.

1.1. A process can have only one debugger attached to it at a time. (0.5 points)

1.2. The structured exception handlers (SEH) are stored in a linked list in the Process Environment Block (PEB) of a process. (0.5 points)

1.3. On Windows, the debugger receives a first-chance notification of an exception even before the application has a chance to handle it. (0.5 points)

1.4. Since hardware breakpoints on x86 are implemented using special debug registers, the target process (debuggee) can easily remove or modify them by using the MOV instruction to change the contents of DR0-DR7 registers. (0.5 points)

1.5. Fetch-decode-execute interpreter emulates instructions one basic block at a time. (0.5 points)

1.6. Emulation with code translation is slower than the traditional fetch-decode-execute approach if the emulated code itself contains long loops. (0.5 points)


2. Windows Internals (2 points)
-------------------------------

Answer the following questions:

2.1. What role do the registers eax and edx play in the modern Windows system call interface? (0.5 points)

2.2. What component in Windows user mode implements the system call interface? (0.5 points)

2.3. What parts are protected with the Kernel Patch Protection feature of Windows? (0.5 points)

2.4. Why is Kernel Patch Protection disabled when kernel mode debugging is enabled? (hint: we are looking for two possible reasons) (0.5 points)


3. Debugging I (6 points)
-------------------------

Analyze sample hw2ex3.bin using a debugger. The sample is not malicious. Use a 32-bit Windows for analysis. The main function starts at 0x401080. Debugging has been tested with OllyDbg 1.10 (http://www.ollydbg.de/odbg110.zip). The sample requires msvcr100.dll from Microsoft Visual C++ 2010 Redistributable Package (the DLL is included in the ZIP). Answer the following questions:

3.1. What is the right password? Explain the logic that is used to generate the password. (4 points)

3.2. The sample does not use load-time dynamic linking (http://msdn.microsoft.com/en-us/library/ms681914%28v=vs.85%29.aspx) with system libraries. The most interesting functions it calls are missing from the import table. How does it call those functions? (2 points)

3.3. The sample tries to make sure that none of the important strings are easy to spot at first sight. How does the sample protect/hide its strings? (2 points)


4. Debugging II (8 points)
-----------------------

Analyze sample hw2ex4.bin using a debugger. The sample is not malicious. Use a 32-bit Windows for analysis. The main function starts at 0x401000. Debugging has been tested with OllyDbg 1.10.

4.1. The sample uses three anti-debugging tricks. What are those? How did you pass the anti-debugging tricks? (3 points)

4.2. Sample protects the most important logic from static analysis. How? (1 point)

4.3. For the protection routine mentioned in 4.2. to work, the PE header had to be modified. What has been modified? Hint: you can compare the values to a normal PE file, e.g. Notepad. (1 point)

4.4. What is the password? Explain the logic that is used to generate the password. (4 points)


5. Effort (1 point)
-------------------

How many hours did you spend answering these questions? Do you think some questions were too easy or too difficult?