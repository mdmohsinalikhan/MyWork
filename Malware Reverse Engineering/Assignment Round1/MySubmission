Full Name: Md Mohsin Ali Khan
Student No: 336790

Problem1:

                1. It uses stdcall. Because after getting returned from the function call it is not adjusting the esp register
                2. It uses cdecl. Because after getting returned from the function call it is adjusting the esp register
                3. It uses fastcall. Because the argument 1 and 2 are being moved to register ecx and edx respectively. and argument 3 and 4 are being pushed to stack. And after getting returned         from the function call it is not adjusting the esp register.
                4. 4 parameters
                5. At least 4 parameters. String type

Problem2:

                1. Little endian. Because the value of the first member of the structure found in the dump is 20 00 00 00. Now, 0x20000000 is not a allowed value but 0x20 is allowed. 
                2. The value is: 41 00 61 00 6c 00 74 00 6f 00 2e 00 65 00 78 00 65 00 00 00 which translates to Aalto.exe
                3. 21.01.2014 and more specifically it is Tuesday, January 21, 2014 3:19:25am

Problem3:

                1. It takes the address which is 4 bytes less than the address of the stored string given by the user as password from the command line 
                2. The size of the file which is being executed is retrieved. Then it is represented in little endian format. Then 1 bit left shift is done over it. After that this it is converted to hex representation curtailing the leading zeros. Then it is compared with the password given by the user.
                3. 3400

Problem4:

                1. The file have the following sections:
                       .text
                       .rdata
                       .data
                       foobar1
                       foobar2
                       foobar3
                       .rsrc

                   The secions foobar1, foobar2 and foobar3 seems to contain code

                 2. It imports symbol from the import directory which has the offset 0x7000 and the size of the directory is 0x80. It doesnt export symbol.
                 3. From the optional header, observing the value of the resource table it can be said that the virtual address of the resource table is: 0x0000F000 and I have checked from the section header that the address of the .rsrc section is also 0x0000F000
                 4. The signature has been issued by : T-110.6220 Test Signer. The certificate table entry in the optional header includes virtual address to the first certificate entry of the attribute certificate table. Now each certificate entry in the attribute certificate table has a field named wCertificateType. The certificate entry which has the value WIN_CERT_TYPE_PKCS_SIGNED_DATA (value: 0x0002) in the wCertificateType field is the digital signature. The signature is not valid because the bCertificate field in the attribute certificate table is a SignedData structure. The first element of this structure is version. In he PKCS #7 v1.5 specification defines that the value of this version must be 1. Which is not the case with this signatures.
                 5. The problem was with the field named machine under the COFF fileheader. Its value was not compatible. I have edited it with the value: 4C 01 (in little endian. Which is actually 0x14C)


Problem5:

                I spent like 30 Hours for it. I dont think they were too difficult. I was not in touch with Assembly language for quite a long time. It took time to refresh my knowledge. Reading the PE file format specification and answering problem 4 was tiresome. 
